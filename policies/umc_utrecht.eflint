// UMC UTRECHT.eflint
//   by Tim MÃ¼ller
// 
// Defines the policy as used by the UMC Utrecht hospital.
// 
// Like the St. Antonius, it has policies to only execute code from certain, trusted packages and
// to only allow results of specific tasks to leave the domain; no other transfers are allowed.
// 
// The policies are implemented by stapling additional clauses to the actions that domains can do.
// This way, the reasoner will raise violations if actions are simulated to be taken but that
// aren't allowed by this domain.
// 

#include "model.eflint".


// This rule enforces that all tasks executed by the UMC Utrecht _must_ be tasks from one of the
// given pre-approved packages (i.e., the UMC Utrecht will not execute anything else).
Extend Act execute
    Conditioned by (
        // We approve any execution that is not done by us OR, if it is, is only some possible
        // packages.
        domain != domain("umc_utrecht")
        || call.task.package == "scs" || call.task.package == "classifier"
        || call.task.package == "synthetic"
    ).



// This rule enforces that all transfers of data owned by the UMC Utrecht in the context of a task
// must be one of the following scenarios:
// 1. The UMC Utrecht accesses the data itself;
// 2. SURF wants to run `central_scs` on local results produced by `local_scs` (first scenario); or
// 3. SURF wants to access local partitions of the synthetic data model to aggregate them (second
//    scenario).
// 
// Everything else will raise a violation.
Extend Act transfer
    Conditioned by (
        // We ignore any transfers not originating from us
        sender != domain("umc_utrecht")
        || (
            // 1.
            receiver == domain("umc_utrecht")

            // 2.
            || (
                call.task == task(package("scs"), "central_scs")
                && receiver == domain("surf")
                && (Forall call-output':
                    call-output'.call.task == task(package("scs"), "local_scs")
                    && assigned-to(call-output'.call, domain("umc_utrecht"))
                    When call-output'.data == data
                )
            )

            // 3.
            || (
                call.task == task(package("synthetic"), "central")
                && receiver == domain("surf")
                && (Forall call-output':
                    call-output'.call.task == task(package("synthetic"), "local")
                    && assigned-to(call-output'.call, domain("umc_utrecht"))
                    When call-output'.data == data
                )
            )
        )
    ).



// This rule enforces that all transfers of data owned by the UMC Utrecht in the context of the
// end of a workflow must be one of the following scenarios:
// 1. The UMC Utrecht accesses the data itself; or
// 3. SURF wants to download the results of validating a local models (i.e., its performance
//    metrics).
// 
// Everything else will raise a violation.
Extend Act download
    Conditioned by (
        // We ignore any transfers not originating from us
        sender != domain("umc_utrecht")
        || (
            // 1.
            receiver == domain("umc_utrecht")

            // 2.
            || (
                receiver == domain("surf")
                && (Forall call-output':
                    call-output'.call.task == task(package("classifier"), "validate")
                    && assigned-to(call-output'.call, domain("umc_utrecht"))
                    When call-output'.data == data
                )
            )
        )
    ).
